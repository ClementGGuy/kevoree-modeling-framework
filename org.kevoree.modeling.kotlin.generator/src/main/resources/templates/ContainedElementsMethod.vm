#* @vtlvariable name="currentClass" type="org.eclipse.emf.ecore.EClass" *#
#* @vtlvariable name="FQNHelper" type="org.kevoree.modeling.kotlin.generator.ProcessorHelper" *#
#* @vtlvariable name="ctx" type="org.kevoree.modeling.kotlin.generator.GenerationContext" *#
#* @vtlvariable name="packElem" type="java.lang.String" *#

#if($ctx.jS)
    #set($mutableOrNot="")
#else
    #set($mutableOrNot="Mutable")

override fun containedAllElements() : ${mutableOrNot}Iterable<$ctx.getKevoreeContainer().get()> {
return ${packElem}.DeepIterable(this)
}

override fun containedElements() : ${mutableOrNot}Iterable<$ctx.getKevoreeContainer().get()> {
var containedIterables = Array<Any?>($currentClass.getEAllContainments().size(),{i ->
when (i) {
    #set($i=0)
    #foreach( $ref in $currentClass.getEAllContainments())
        $i -> {

        #if($ref.isMany())
            #if(${ref.getEReferenceType().getEIDAttribute()})
            _${ref.getName()}.values()
            #else
            _${ref.getName()}
            #end
         #else
            _${ref.getName()}
        #end
    }
        #set($i=$i+1)
    #end
else -> {}
}
})
return ${packElem}.CompositeIterable(containedIterables)
}

#end



