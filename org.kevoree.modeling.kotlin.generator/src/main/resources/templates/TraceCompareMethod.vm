#* @vtlvariable name="currentClass" type="org.eclipse.emf.ecore.EClass" *#
#* @vtlvariable name="FQNHelper" type="org.kevoree.modeling.kotlin.generator.ProcessorHelper" *#
#* @vtlvariable name="ctx" type="org.kevoree.modeling.kotlin.generator.GenerationContext" *#

#set($tracePack=${FQNHelper.fqn($ctx, $ctx.getBasePackageForUtilitiesGeneration())})

override fun generateDiffTraces(similarObj : ${ctx.getKevoreeContainer().get()}?, inter : Boolean) : List<${tracePack}.trace.ModelTrace> {

    var similarObjCasted : ${FQNHelper.fqn($ctx, $currentClass)}? = null
    #if($ctx.getJS())
        if(similarObj == null || !(similarObj is ${FQNHelper.fqn($ctx, $currentClass)}) || !(similarObj is ${FQNHelper.fqn($ctx, $currentClass.getEPackage())}.impl.${currentClass.getName()}Impl) ){
    #else
        if(similarObj == null || !(similarObj is ${FQNHelper.fqn($ctx, $currentClass)})){
    #end
            similarObjCasted = null;
        } else {
            similarObjCasted = similarObj as ${FQNHelper.fqn($ctx, $currentClass)}
        }

    val traces = java.util.ArrayList<${tracePack}.trace.ModelTrace>()
    var attVal : Any? = null;
    var attVal2 : Any? = null;

     #foreach( $att in $currentClass.eAllAttributes )
          attVal = get${att.getName().substring(0, 1).toUpperCase()}${att.getName().substring(1)}()
          attVal2 = similarObjCasted?.get${att.getName().substring(0, 1).toUpperCase()}${att.getName().substring(1)}()
          if(attVal != attVal2){
                 if(!inter){
                    traces.add(${tracePack}.trace.ModelSetTrace(path()!!,"$att.getName()",null,attVal2?.toString()))
                 }
          } else {
                //att similar
                if(inter){
                    traces.add(${tracePack}.trace.ModelSetTrace(path()!!,"$att.getName()",null,attVal2?.toString()))
                }
          }
     #end
     #foreach( $ref in $currentClass.eAllReferences )
         #if(!$ref.isContainment());
          attVal = path();
          attVal2 = similarObjCasted?.path()
          if(attVal != attVal2){
                 if(!inter){
                    traces.add(${tracePack}.trace.ModelSetTrace(attVal!!.toString(),"$ref.getName()",attVal2?.toString(),null))
                 }
          } else {
                //att similar
                if(inter){
                    traces.add(${tracePack}.trace.ModelSetTrace(attVal!!.toString(),"$ref.getName()",attVal2?.toString(),null))
                }
          }
         #end
     #end
     return traces;
}

